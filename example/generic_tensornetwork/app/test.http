@host = 127.0.0.1
@port = 3500

###

# Check agent is alive

# @name IndependentSetConfig
POST http://{{host}}:8081/actors/greet/jinguo/method/
Content-Type: application/json
Accept: application/json

{"kwargs":{"weights":[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],"__type__":"Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}","graph":{"nv":10,"__type__":"Jugsaw.Universe.Graph","edges":{"data":[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10],"size":[2,15],"__type__":"Core.Array{Core.Int64, 2}"}}},"args":{"data":[],"__type__":"Core.Tuple{}"},"fname":"Main.IndependentSetConfig","__type__":"Jugsaw.JugsawFunctionCall{Core.DataType, Core.Tuple{}, Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}}"}

###
@obj_res_ref = {{IndependentSetConfig.response.body.*}}

POST http://{{host}}:8081/actors/greet/jinguo/method/fetch

{{obj_res_ref}}

###
# @name countingmax2
POST http://{{host}}:8081/actors/greet/jinguo/method/
Content-Type: application/json
Accept: application/json

{"kwargs":{"optimizer":{"initializer":{"data":"greedy","__type__":"Core.Symbol"},"sc_weight":1.0,"nslices":0,"sc_target":20,"rw_weight":0.2,"__type__":"OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}","fixed_slices":[],"ntrials":10,"niters":50,"Î²s":{"step":{"hi":0.04999999999999716,"__type__":"Base.TwicePrecision{Core.Float64}","lo":2.842170943040401e-15},"offset":1,"len":300,"__type__":"Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}","ref":{"hi":0.01,"__type__":"Base.TwicePrecision{Core.Float64}","lo":-2.0816681711721684e-19}},"greedy_config":{"method":{"__type__":"OMEinsumContractionOrders.MinSpaceOut"},"__type__":"OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}","nrepeat":1}},"seed":2,"usecuda":false,"__type__":"Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}"},"args":{"data":[{"fixedvertices":{"data":{},"__type__":"Base.Dict{Core.Int64, Core.Int64}"},"openvertices":[],"weights":[1,1,1,1,1,1,1,1,1,1],"__type__":"Main.IndependentSetConfig","graph":{"nv":10,"__type__":"Jugsaw.Universe.Graph","edges":{"data":[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10],"size":[2,15],"__type__":"Core.Array{Core.Int64, 2}"}}},{"__type__":"GenericTensorNetworks.CountingMax{2}"}],"__type__":"Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}"},"fname":{"__type__":"Main.#solve"},"__type__":"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}"}
#####

@greet_res_ref = {{countingmax2.response.body.*}}

POST http://{{host}}:8081/actors/greet/jinguo/method/fetch

{{greet_res_ref}}