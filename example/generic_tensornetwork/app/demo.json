{"fields":["keys","values"],"values":[["Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}","Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}","Jugsaw.JugsawFunctionCall{Main.#smallgraph, Core.Tuple{Core.Symbol}, Core.NamedTuple{(), Core.Tuple{}}}","Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{}, Core.NamedTuple{(), Core.Tuple{}}}","Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}","Jugsaw.JugsawFunctionCall{Core.DataType, Core.Tuple{}, Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}}","Jugsaw.JugsawFunctionCall{Base.#ones, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}","Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}"],[{"fields":["first","second"],"values":[{"fields":["fname","args","kwargs"],"values":[{"fields":[],"values":[],"type":"Main.#solve"},{"fields":["1","2"],"values":[{"fields":["graph","weights","openvertices","fixedvertices"],"values":[{"fields":["nv","edges"],"values":[10,{"fields":["size","storage"],"values":[[2,15],[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]],"type":"Core.Array{Core.Int64, 2}"}],"type":"Jugsaw.Universe.Graph"},{"fields":["size","storage"],"values":[[10],[1,1,1,1,1,1,1,1,1,1]],"type":"Core.Array{Core.Int64, 1}"},{"fields":["size","storage"],"values":[[0],[]],"type":"Core.Array{Core.Int64, 1}"},{"fields":["keys","values"],"values":[[],[]],"type":"Base.Dict{Core.Int64, Core.Int64}"}],"type":"Main.IndependentSetConfig"},{"fields":[],"values":[],"type":"GenericTensorNetworks.CountingMax{2}"}],"type":"Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}"},{"fields":["usecuda","seed"],"values":[false,2],"type":"Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}"}],"type":"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}"},{"fields":["coeffs","maxorder"],"values":[{"fields":["1","2"],"values":[30.0,5.0],"type":"Core.Tuple{Core.Float64, Core.Float64}"},4.0],"type":"GenericTensorNetworks.TruncatedPoly{2, Core.Float64, Core.Float64}"}],"type":"Core.Pair{Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}, GenericTensorNetworks.TruncatedPoly{2, Core.Float64, Core.Float64}}"},{"fields":["first","second"],"values":[{"fields":["fname","args","kwargs"],"values":["GenericTensorNetworks.CountingMax",{"fields":["1"],"values":[2],"type":"Core.Tuple{Core.Int64}"},{"fields":[],"values":[],"type":"Core.NamedTuple{(), Core.Tuple{}}"}],"type":"Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}"},{"fields":[],"values":[],"type":"GenericTensorNetworks.CountingMax{2}"}],"type":"Core.Pair{Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}, GenericTensorNetworks.CountingMax{2}}"},{"fields":["first","second"],"values":[{"fields":["fname","args","kwargs"],"values":[{"fields":[],"values":[],"type":"Main.#smallgraph"},{"fields":["1"],"values":[{"fields":[],"values":["petersen"],"type":"Core.Symbol"}],"type":"Core.Tuple{Core.Symbol}"},{"fields":[],"values":[],"type":"Core.NamedTuple{(), Core.Tuple{}}"}],"type":"Jugsaw.JugsawFunctionCall{Main.#smallgraph, Core.Tuple{Core.Symbol}, Core.NamedTuple{(), Core.Tuple{}}}"},{"fields":["nv","edges"],"values":[10,{"fields":["size","storage"],"values":[[2,15],[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]],"type":"Core.Array{Core.Int64, 2}"}],"type":"Jugsaw.Universe.Graph"}],"type":"Core.Pair{Jugsaw.JugsawFunctionCall{Main.#smallgraph, Core.Tuple{Core.Symbol}, Core.NamedTuple{(), Core.Tuple{}}}, Jugsaw.Universe.Graph}"},{"fields":["first","second"],"values":[{"fields":["fname","args","kwargs"],"values":["GenericTensorNetworks.SizeMax",{"fields":[],"values":[],"type":"Core.Tuple{}"},{"fields":[],"values":[],"type":"Core.NamedTuple{(), Core.Tuple{}}"}],"type":"Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{}, Core.NamedTuple{(), Core.Tuple{}}}"},{"fields":[],"values":[],"type":"GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}"}],"type":"Core.Pair{Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{}, Core.NamedTuple{(), Core.Tuple{}}}, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}"},{"fields":["first","second"],"values":[{"fields":["fname","args","kwargs"],"values":[{"fields":[],"values":[],"type":"Main.#solve"},{"fields":["1","2"],"values":[{"fields":["graph","weights","openvertices","fixedvertices"],"values":[{"fields":["nv","edges"],"values":[10,{"fields":["size","storage"],"values":[[2,15],[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]],"type":"Core.Array{Core.Int64, 2}"}],"type":"Jugsaw.Universe.Graph"},{"fields":["size","storage"],"values":[[10],[1,1,1,1,1,1,1,1,1,1]],"type":"Core.Array{Core.Int64, 1}"},{"fields":["size","storage"],"values":[[0],[]],"type":"Core.Array{Core.Int64, 1}"},{"fields":["keys","values"],"values":[[],[]],"type":"Base.Dict{Core.Int64, Core.Int64}"}],"type":"Main.IndependentSetConfig"},{"fields":[],"values":[],"type":"GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}"}],"type":"Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}"},{"fields":["usecuda","seed"],"values":[false,2],"type":"Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}"}],"type":"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}"},{"fields":["n"],"values":[4.0],"type":"TropicalNumbers.Tropical{Core.Float64}"}],"type":"Core.Pair{Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}, TropicalNumbers.Tropical{Core.Float64}}"},{"fields":["first","second"],"values":[{"fields":["fname","args","kwargs"],"values":["Main.IndependentSetConfig",{"fields":[],"values":[],"type":"Core.Tuple{}"},{"fields":["graph","weights"],"values":[{"fields":["nv","edges"],"values":[10,{"fields":["size","storage"],"values":[[2,15],[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]],"type":"Core.Array{Core.Int64, 2}"}],"type":"Jugsaw.Universe.Graph"},{"fields":["size","storage"],"values":[[10.0],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0]],"type":"Core.Array{Core.Float64, 1}"}],"type":"Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}"}],"type":"Jugsaw.JugsawFunctionCall{Core.DataType, Core.Tuple{}, Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}}"},{"fields":["graph","weights","openvertices","fixedvertices"],"values":[{"fields":["nv","edges"],"values":[10,{"fields":["size","storage"],"values":[[2,15],[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]],"type":"Core.Array{Core.Int64, 2}"}],"type":"Jugsaw.Universe.Graph"},{"fields":["size","storage"],"values":[[10],[1,1,1,1,1,1,1,1,1,1]],"type":"Core.Array{Core.Int64, 1}"},{"fields":["size","storage"],"values":[[0],[]],"type":"Core.Array{Core.Int64, 1}"},{"fields":["keys","values"],"values":[[],[]],"type":"Base.Dict{Core.Int64, Core.Int64}"}],"type":"Main.IndependentSetConfig"}],"type":"Core.Pair{Jugsaw.JugsawFunctionCall{Core.DataType, Core.Tuple{}, Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}}, Main.IndependentSetConfig}"},{"fields":["first","second"],"values":[{"fields":["fname","args","kwargs"],"values":[{"fields":[],"values":[],"type":"Base.#ones"},{"fields":["1"],"values":[10],"type":"Core.Tuple{Core.Int64}"},{"fields":[],"values":[],"type":"Core.NamedTuple{(), Core.Tuple{}}"}],"type":"Jugsaw.JugsawFunctionCall{Base.#ones, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}"},{"fields":["size","storage"],"values":[[10.0],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0]],"type":"Core.Array{Core.Float64, 1}"}],"type":"Core.Pair{Jugsaw.JugsawFunctionCall{Base.#ones, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}, Core.Array{Core.Float64, 1}}"},{"fields":["first","second"],"values":[{"fields":["fname","args","kwargs"],"values":[{"fields":[],"values":[],"type":"Main.#solve"},{"fields":["1","2"],"values":[{"fields":["graph","weights","openvertices","fixedvertices"],"values":[{"fields":["nv","edges"],"values":[10,{"fields":["size","storage"],"values":[[2,15],[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]],"type":"Core.Array{Core.Int64, 2}"}],"type":"Jugsaw.Universe.Graph"},{"fields":["size","storage"],"values":[[10],[1,1,1,1,1,1,1,1,1,1]],"type":"Core.Array{Core.Int64, 1}"},{"fields":["size","storage"],"values":[[0],[]],"type":"Core.Array{Core.Int64, 1}"},{"fields":["keys","values"],"values":[[],[]],"type":"Base.Dict{Core.Int64, Core.Int64}"}],"type":"Main.IndependentSetConfig"},{"fields":[],"values":[],"type":"GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}"}],"type":"Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}}"},{"fields":["usecuda","seed"],"values":[false,2],"type":"Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}"}],"type":"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}"},{"fields":["n","c"],"values":[4.0,5.0],"type":"TropicalNumbers.CountingTropical{Core.Float64, Core.Float64}"}],"type":"Core.Pair{Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed), Core.Tuple{Core.Bool, Core.Int64}}}, TropicalNumbers.CountingTropical{Core.Float64, Core.Float64}}"}]],"type":"Base.Dict{Core.String, Core.Any}"}