{"__type__":"Base.Dict{Core.String, Any}","data":{"Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}":{"__type__":"Core.Pair{Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}, GenericTensorNetworks.CountingMax{2}}","first":{"__type__":"Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}","fname":{"__type__":"Core.UnionAll","var":{"__type__":"Core.TypeVar","name":{"__type__":"Core.Symbol","data":"K"},"lb":{"__type__":"Core.TypeofBottom"},"ub":"Any"},"body":{"__type__":"Core.UnionAll","var":null,"body":null}},"args":{"__type__":"Core.Tuple{Core.Int64}","data":[2]},"kwargs":{"__type__":"Core.NamedTuple{(), Core.Tuple{}}"}},"second":{"__type__":"GenericTensorNetworks.CountingMax{2}"}},"Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{}, Core.NamedTuple{(), Core.Tuple{}}}":{"__type__":"Core.Pair{Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{}, Core.NamedTuple{(), Core.Tuple{}}}, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}","first":{"__type__":"Jugsaw.JugsawFunctionCall{Core.UnionAll, Core.Tuple{}, Core.NamedTuple{(), Core.Tuple{}}}","fname":{"__type__":"Core.UnionAll","var":{"__type__":"Core.TypeVar","name":{"__type__":"Core.Symbol","data":"K"},"lb":{"__type__":"Core.TypeofBottom"},"ub":"Any"},"body":{"__type__":"Core.UnionAll","var":null,"body":null}},"args":{"__type__":"Core.Tuple{}","data":[]},"kwargs":{"__type__":"Core.NamedTuple{(), Core.Tuple{}}"}},"second":{"__type__":"GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}"}},"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}":{"__type__":"Core.Pair{Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}, GenericTensorNetworks.TruncatedPoly{2, Core.Float64, Core.Float64}}","first":{"__type__":"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}","fname":{"__type__":"Main.#solve"},"args":{"__type__":"Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{2}}","data":[{"__type__":"Main.IndependentSetConfig","graph":{"__type__":"Jugsaw.Universe.Graph","nv":10,"edges":{"__type__":"Core.Array{Core.Int64, 2}","size":[2,15],"data":[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]}},"weights":[1,1,1,1,1,1,1,1,1,1],"openvertices":[],"fixedvertices":{"__type__":"Base.Dict{Core.Int64, Core.Int64}","data":{}}},{"__type__":"GenericTensorNetworks.CountingMax{2}"}]},"kwargs":{"__type__":"Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}","usecuda":false,"seed":2,"optimizer":{"__type__":"OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}","sc_target":20,"βs":{"__type__":"Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}","ref":{"__type__":"Base.TwicePrecision{Core.Float64}","hi":0.01,"lo":-2.0816681711721684e-19},"step":{"__type__":"Base.TwicePrecision{Core.Float64}","hi":0.04999999999999716,"lo":2.842170943040401e-15},"len":300,"offset":1},"ntrials":10,"niters":50,"sc_weight":1.0,"rw_weight":0.2,"initializer":{"__type__":"Core.Symbol","data":"greedy"},"nslices":0,"fixed_slices":[],"greedy_config":{"__type__":"OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}","method":{"__type__":"OMEinsumContractionOrders.MinSpaceOut"},"nrepeat":1}}}},"second":{"__type__":"GenericTensorNetworks.TruncatedPoly{2, Core.Float64, Core.Float64}","coeffs":{"__type__":"Core.Tuple{Core.Float64, Core.Float64}","data":[30.0,5.0]},"maxorder":4.0}},"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}":{"__type__":"Core.Pair{Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}, TropicalNumbers.CountingTropical{Core.Float64, Core.Float64}}","first":{"__type__":"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}","fname":{"__type__":"Main.#solve"},"args":{"__type__":"Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}}","data":[{"__type__":"Main.IndependentSetConfig","graph":{"__type__":"Jugsaw.Universe.Graph","nv":10,"edges":{"__type__":"Core.Array{Core.Int64, 2}","size":[2,15],"data":[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]}},"weights":[1,1,1,1,1,1,1,1,1,1],"openvertices":[],"fixedvertices":{"__type__":"Base.Dict{Core.Int64, Core.Int64}","data":{}}},{"__type__":"GenericTensorNetworks.CountingMax{GenericTensorNetworks.Single}"}]},"kwargs":{"__type__":"Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}","usecuda":false,"seed":2,"optimizer":{"__type__":"OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}","sc_target":20,"βs":{"__type__":"Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}","ref":{"__type__":"Base.TwicePrecision{Core.Float64}","hi":0.01,"lo":-2.0816681711721684e-19},"step":{"__type__":"Base.TwicePrecision{Core.Float64}","hi":0.04999999999999716,"lo":2.842170943040401e-15},"len":300,"offset":1},"ntrials":10,"niters":50,"sc_weight":1.0,"rw_weight":0.2,"initializer":{"__type__":"Core.Symbol","data":"greedy"},"nslices":0,"fixed_slices":[],"greedy_config":{"__type__":"OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}","method":{"__type__":"OMEinsumContractionOrders.MinSpaceOut"},"nrepeat":1}}}},"second":{"__type__":"TropicalNumbers.CountingTropical{Core.Float64, Core.Float64}","n":4.0,"c":5.0}},"Jugsaw.JugsawFunctionCall{Core.DataType, Core.Tuple{}, Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}}":{"__type__":"Core.Pair{Jugsaw.JugsawFunctionCall{Core.DataType, Core.Tuple{}, Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}}, Main.IndependentSetConfig}","first":{"__type__":"Jugsaw.JugsawFunctionCall{Core.DataType, Core.Tuple{}, Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}}","fname":"Main.IndependentSetConfig","args":{"__type__":"Core.Tuple{}","data":[]},"kwargs":{"__type__":"Core.NamedTuple{(:graph, :weights), Core.Tuple{Jugsaw.Universe.Graph, Core.Array{Core.Float64, 1}}}","graph":{"__type__":"Jugsaw.Universe.Graph","nv":10,"edges":{"__type__":"Core.Array{Core.Int64, 2}","size":[2,15],"data":[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]}},"weights":[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0]}},"second":{"__type__":"Main.IndependentSetConfig","graph":{"__type__":"Jugsaw.Universe.Graph","nv":10,"edges":{"__type__":"Core.Array{Core.Int64, 2}","size":[2,15],"data":[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]}},"weights":[1,1,1,1,1,1,1,1,1,1],"openvertices":[],"fixedvertices":{"__type__":"Base.Dict{Core.Int64, Core.Int64}","data":{}}}},"Jugsaw.JugsawFunctionCall{Base.#ones, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}":{"__type__":"Core.Pair{Jugsaw.JugsawFunctionCall{Base.#ones, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}, Core.Array{Core.Float64, 1}}","first":{"__type__":"Jugsaw.JugsawFunctionCall{Base.#ones, Core.Tuple{Core.Int64}, Core.NamedTuple{(), Core.Tuple{}}}","fname":{"__type__":"Base.#ones"},"args":{"__type__":"Core.Tuple{Core.Int64}","data":[10]},"kwargs":{"__type__":"Core.NamedTuple{(), Core.Tuple{}}"}},"second":[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0]},"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}":{"__type__":"Core.Pair{Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}, TropicalNumbers.Tropical{Core.Float64}}","first":{"__type__":"Jugsaw.JugsawFunctionCall{Main.#solve, Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}, Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}}","fname":{"__type__":"Main.#solve"},"args":{"__type__":"Core.Tuple{Main.IndependentSetConfig, GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}}","data":[{"__type__":"Main.IndependentSetConfig","graph":{"__type__":"Jugsaw.Universe.Graph","nv":10,"edges":{"__type__":"Core.Array{Core.Int64, 2}","size":[2,15],"data":[1,2,1,5,1,6,2,3,2,7,3,4,3,8,4,5,4,9,5,10,6,8,6,9,7,9,7,10,8,10]}},"weights":[1,1,1,1,1,1,1,1,1,1],"openvertices":[],"fixedvertices":{"__type__":"Base.Dict{Core.Int64, Core.Int64}","data":{}}},{"__type__":"GenericTensorNetworks.SizeMax{GenericTensorNetworks.Single}"}]},"kwargs":{"__type__":"Core.NamedTuple{(:usecuda, :seed, :optimizer), Core.Tuple{Core.Bool, Core.Int64, OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}}}","usecuda":false,"seed":2,"optimizer":{"__type__":"OMEinsumContractionOrders.TreeSA{Core.Int64, Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}, OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}, Any}","sc_target":20,"βs":{"__type__":"Base.StepRangeLen{Core.Float64, Base.TwicePrecision{Core.Float64}, Base.TwicePrecision{Core.Float64}, Core.Int64}","ref":{"__type__":"Base.TwicePrecision{Core.Float64}","hi":0.01,"lo":-2.0816681711721684e-19},"step":{"__type__":"Base.TwicePrecision{Core.Float64}","hi":0.04999999999999716,"lo":2.842170943040401e-15},"len":300,"offset":1},"ntrials":10,"niters":50,"sc_weight":1.0,"rw_weight":0.2,"initializer":{"__type__":"Core.Symbol","data":"greedy"},"nslices":0,"fixed_slices":[],"greedy_config":{"__type__":"OMEinsumContractionOrders.GreedyMethod{OMEinsumContractionOrders.MinSpaceOut}","method":{"__type__":"OMEinsumContractionOrders.MinSpaceOut"},"nrepeat":1}}}},"second":{"__type__":"TropicalNumbers.Tropical{Core.Float64}","n":4.0}}}}